 сделан вывод вью при создании новой записи
 
 !!!! размер поля select должен равняться размеру id таблицы на которую он ссылается

сделать поле типа select (при создании и редактировании сделать как для image таблицы через vue)
 при удалении записей на которые указывает это поле, автоматически это не проверяется, можно пользователю 
   проверять через хук onBeforeDelete
----
для L,D написать функцию определения текущей страницы
  (select count(*) limit 1 возвращает 25 или любое число а не 1)
+  для L, D для таблицы поставить признак "вычислять текущую страницу (может нагружать сервер и занимать время
    для большой таблицы)"
----
при удалении поля проверять на наличие в списке select полей ссылок (yy_select) и в списке yy_view_columns 
 (колонки вывода списка для L, D) 
----
+ поставить поле для таблиц "отображать вместе с родителем"  (не исп. пока что)
+ а таже поле "видно только админу" (не исп. пока что)
в следующих версиях - сделать возможность отображения list, ord вместе с родительским элементом
-----
struct-add-table - сделать универсальной в том числе для добавления подтаблиц
  сделать отображение сообщения об ошибке на той же странице, а в случае успеха переход
    на редактирование этой таблицы
----
! сделать tree(cat) тип таблиц
(пользователь может выбирать, что использовать в своем проекте, либо tree(если не только у максимального уровня 
вложенности есть данные), либо вложенные list
----
list/editrec - move, delete
------
edit, editrec - id parent_id а не parent_table
----
!!!!! таблицы типа one могут быть вложены в таблицы типа one только верхнего уровня
----
удалять текущий элемент + весь предыдущий уровень
----
search - в индекс могут сохраняться данные определенного, плюс следующего уровня таблиц
yy_search - url, url_parts(адрес, где находится в url тот или иной элемент), txt, txt_parts
----
if id == 0 && !hasErr() { getDefaults() }
---
!!! таблицы типа "one" могут быть на любом уровне
         для таблицы типа one можно устанавливать yy_tables->make_with_parents (установленный флаг значит,
		  что этот элемент нужно создавать при создании родительского (на один уровень вниз))
!!!   для ссылки на предыдущие таблицы добавляются поля id1, id2, ... (сколько нужно)
   запретить задание пользовательских полей вида 'id<N>'
   создать ArrayHelper::collectNs(string $name, array $arrFrom, array &$arrTo):int (сколько номеров заколлекчено) $arr - (key - $name.<N>, value - $arrFrom[$name.<N>])
----
!!! использовать по возможности apache_getenv для получения SERVER_NAME
$_SERVER['SERVER_NAME'] = 'somesite.org';
echo 'first ' . apache_getenv('SERVER_NAME');
apache_setenv('SERVER_NAME', 'aoj.org');
echo 'second ' . apache_getenv('SERVER_NAME');

// apache_setenv() меняет SERVER_NAME, $_SERVER это отдельный список от apache


варианты лицензирования:
1) любой сайт 30 дней без лицензии
     если кончился триал период, то сразу стопается и бэкенд и фронтэнд(где получается) - просто выводится стоп страница без ссылок. тогда ввести лицензию может только 
	   'admin' зайдя в админку
2) localhost - без лицензии бесплатно
любой сайт - 20 дней без лицензии

я наверное предпочту 1 вариант	   
-------
в boot() провайдера:
что то типа 
//$this->loadTranslationsFrom(__DIR__.'/../resources/lang', 'name');
$this->publishes([
            __DIR__.'/../resources/lang' => resource_path('lang/vendor/name'),
        ], 'lang');
!!! проверить, как будет подключаться пагинация русифицированная
------
!!! добавить поле _srv_ для поля типа string - преобразование строки в вид для url
      к полю - признак "русское/английское"
	в field.save() - добавить возможность добавлять-удалять дополнительное поле
      ошибки бд как обрабатывать-различать?
	  также проверку на то, что текущее поле включено в индекс mysql
        такую же проверку в field.delete()	  
----
!!! зарегистрировать торговый знак "Nesttab" (вроде сейчас это стоит порядка 30000 руб)
  недавно принят закон о возможности регистрации товарного знака самозанятым
----
в следующих версиях
    сделать "Секции" - разбиение одной записи на несколько разделов (но все хранится в одной записи)
----
в  следующих версиях
    сделать несколько url rewrite (как в битрикс) для одной записи, при этом если хотя бы одно строковое значение
	 пустое, то не записывать в поиск этот Url rewrite
----
сделать поле db типа link (ссылка на другую таблицу) (тип поля int)
   это поле ссылается на поле <field> типа string другой таблицы
   при редактировании (в этой версии) в тэг <select> заносится набор (id, <field>) из всех записей этой таблицы
!!! нужно написать в хелпе (и инлайн хелпе) что при большом количестве записей в таблице желательно проиндексировать
  ее по полю <parent_id>,<field> и не желательно большое количество данных в этой таблице (больше 1000 записей)
----
в следующих версиях:
 сделать js компоненты NesttabDbStringList, NesttabDbComboBox, NesttabDbSearchStringList, NesttabDbSearchComboBox
 (на основе div and hidden form field)
 обращается за данными через ajax
   там идет запрос к бд select id, name from table where (name = '$name1' and id > $id1) or (name > '$name1')
		limit 0, $recsNeeded + 1
	где $recsNeeded - количество нужных записей бд	
     где $name1, $id1 = строковое поле текущей записи и идентификатор текущей записи
 также может быть локальный запрос данных
 запрашиваются данные с параметрами (isBefore, isAfter /*(нужно ли возвращать массив до и после тек. записи) */)
 данные возвращаются в виде массива:
  {
	isStart: boolean, // достигнуто начало набора данных
	isEnd: boolean, // достигнут конец набора данных
	beforeList: { // список данных перед текущей (или найденной search) записью
		{id: <id>, text: '<text>'},
		...
	},
	afterList: { // список данных после текущей (или найденной search) записью
		{id: <id>, text: '<text>'},
		...
	}
  }  
----
!!!!!!! это потом удалить отсюда !!!!!!
!!! в базе данных должно быть поле с датой когда данная копия стала лицензионной (а также и в структуре файлов)
  создать текстовый файл в каталоге upload (с данными лицензии), в нем 3 хекс-числа (дата время инсталляции несттаб
    + смещение, первое число с побитовым xor с другим числом, md5(из 2-х чисел + salt + домен сайта без http)),
	проверять этот текстовый файл eval(base64_decode()) в редактировании записи,
  а также поле в бд такого же типа, на него ссылка в редактировании структуры таблиц (eval ...)
  при вводе купленного ключа текстовый файл и поле в бд заполняются переданными с сервера данными
  поставить .gitignore на этот текстовый файл (и также предусмотреть, чтобы поле бд не затиралось из дампа при
   загрузке на сервер)
   - если первое число указывает на дату больше текущей, или близкой к 0, то выводить сообщение что нет лицензии
---
!!! удаление записи таблицы возможно только если ниже ее заполенено не более одного уровня данных
  (предусмотреть в том числе для каталогов дерева)
-----
вложенность таблиц - до бесконечности
 удалять запись можно только когда ниже ее не больше одного уровня данных (удаляем вместе с этим уровнем)
 - отображаем в хлебных крошках текущий уровень, и 2 предыдущих (дерево считается за один уровень)
------
к таблицам добавить поле признак "Является компонентом" (component_id<>0)
 для компонентов дополнительные поля - текстовое значение из config.php компонента, целое значение из config.php 
   компонента (данные читаются из config.php выгруженного в ларавел компонента)
 каталоги которые могут добавится: laravel/views/news.detail
   laravel/Models/news.detail (тут config.php)
 также для таблицы компонента добавляется поле "выбор компонента" news_detail_sys (имя таблицы) (пишется в config.php)  
 - зарезервировать имена таблиц заканчивающихся на _sys для компонентов
--- 
сделать тип таблицы component 
 - это тот же тип list, но есть поле component_id в которое данные берутся из таблицы yy_components (там список
   инсталлированных компонентов) и поле component_name(string, for example paginator4 - выбирается свободное имя
     файла для него) - при добавлении также выгружать компонент в ларавел
добавить поле component_id в yy_tables (если не является компонентом, то 0)	 
 в yy_components поле edit_object (адрес объекта для редактирования)
- при редактировании таблицы если есть Models/Nesttab/<имя таблицы>.php, то обрабатываются сначала хуки из него
   потом если это компонента, то хуки из компоненты (edit_object)
   - в хуке при вызове передается параметр $chain_go_next (обрабатывать ли хуки компонента для имени таблицы,
   для хуков компонента просто передается переменная и не меняется)
----
- в следующей версии nesttab:
 сделать таблицы типа user (key parent_id, user_id) - отображается как one для текущего пользователя
   таблица как тип ord
- при редактировании таблиц типа one и user добавлять insert into values(0) перед отображением записи
-----
3 типа аддонов:
Html
Field
Component (!!! аддоны типа компонент не делаю, по крайней мере пока не сделал интернет магазин)

в корневом каталоге laravel - каталог addons
 в нем каталоги аддонов вида <vendor>/<addon>
 в нем файл config.ini вида
[Html]
<addon>
...
[Html_current]
<addon2>
[Field]
<addon>
...
[Component]
<addon>
...

где <addon> - это адрес каталога аддонов типа <vendor>/<addon><пробел><название аддона> 
 <addon2> - это адрес каталога аддонов типа <vendor>/<addon> 

предусмотреть функцию readAddonsConfig($filename, $toSection) 
  // $toSection - вплоть до какой секции читать файл
 файл читаем построчно
----- не поставить html editor wymeditor (xhtml dual license mit) -  конфликт с текущей версией jquery,
- не markitup (mit license, но не wisywig), не nicedit (mit license, но давно сделан - в 2008 году - конфликт с jquery) 
- то есть оставляю ckeditor4, но делаю его отдельно (он по copyleft лицензии)
-------------
- посмотреть, как будет работать сохранение записи при key violation in db


- BasicModel->saveStep2() - чтобы работало если не хватает места на диске

+ app.php поставил timezone Europe/Moscow
     - time() выдает время на 3 часа раньше текущего 
   ---- TOkenUploadModel->deleteOldTokens() - timeSpan почему-то выдает -4 часа вместо -1

- можно отслеживать violation ключей бд при добавлении-изменении записей
 тогда выдается сообщение mysql:
	#1062 - Duplicate entry '1-0' for key 'id2'
 (hook onDataModifyError)
 
- при добавлении-обновлении записей в несттаб - сначала записывать все данные без данных image,file,
    затем, если не было ошибок - данные image,file
 
- в методе удаления директорий - проверять на подстроку '..'

- сделать createDir with chunks 

+++++ - js __lang('Close') (сделать языковую трансляцию для js)

!!! в поле File запретить загрузку файлов с любым расширением - всегда должен быть список допустимых расширений
   (чтобы не загружали например файлы типа "php" с тем чтобы можно было их удаленно запустить на сервере)

- в следующих версиях: сделать галочку для таблиц типа "Список" и "Произвольные данные", позволяющую отображать их
   при редактировании на одном уровне с родительской записью

- в следующей версии : ckeditor - image to the right (кнопка "изображение" справа от редактора для работы с файлами изображений)

- !!! (в этой версии) Сделать регистрацию зарегистрированных пользователей 

сделать удаление поля типа File с удалением соответствующих файлов

!!! сделать cache::lock на добавление - редактирование полей таблиц

!!! при редактировании/добавлении полей в таблицах типа 'one' не вводить значение по умолчанию

!!! при удалении таблицы удалять сначала таблицу физически, и если ошибка не "таблица не существует",
  то не удалять из метаданных и выдавать ошибку

!!! сделать возможность удаления таблиц

!!! удаление из таблиц где верхний уровень - дерево:
  select where topid = ? left join on a.id = b.topid (3 Раза) limit 0, 40 
    (это записываем в массив, если у элемента нет подэлементов в дереве, то тоже можно дочерние в других таблицах
	   удалять)
 если дерево не верхний уровень, то просто select order by id desc where parent_id = ?	   

загрузка изображений - счетчик номеров директорий сделать в виде текстового файла
!!!!!! в таблицы верхнего уровня не добавлять поле parent_id и другие указывающие на родительскую таблицу

сделать объект - обработчик index.php в public каталоге, который смотрит файл .url_rewrite и при соответствии 
 записи типа preg_match передает в путь, указанный на следующей строке параметры $_GET['n_values'], равные
 результату preg_match
  - также в файле .url_rewrite могут быть комментарии, начинающиеся на #
  - записи в .url_rewrite разделяются пустой строкой

-----
можно использовать Laravel-Lang/lang
 пакет для языковой локали русской и других
 
подключить Html редактор - вроде Trix с изображениями редактор

---
в новых версиях (после 1-й):


1) полнотекстовый поиск по БД
- для полей самой таблицы указывать, включается ли это поле в поиск
- указывать строку с адресом url, на основе имен полей, с возможностью указания имени таблицы для
  родительских полей (например, "item/{yz_cat.txt_res_trans}/{txt2_res_trans}"
    (где txt2_res_trans - это поле транслита для поля txt таблицы yz_cat, таблица yz_cat является родительской
	  для текущей таблицы, txt2_res_trans - поле транслита для поля txt2 текущей таблицы)
2) предусмотреть возможность формировать вручную поле полнотекстового поиска для указанных таблиц
2.1) структура для всех формирующихся вручную данных полнотекстового поиска задается в одной единственной callback-
  функции getFullTextSearchStructure() объекта UserFullTextSearch в виде набора команд:
   $this->addInfo(string $tableName, array $childTablesNames, string $buildMethod)
    где $tableName - имя таблицы, которая является основной для индексации этого набора таблиц
	$childTablesNames - array of string - имена дочерних таблиц любого уровня для основной, данные из которых тоже
	  будут сохранятся в поле полнотекстового поиска
	$buildMethod - имя метода объекта UserFullTextSearch, который будет формировать значение поля полнотекстового
    	поиска
	  формат метода: $this->{$buildMethod}(array $thisRecord):array
	   @param array $thisRecord - содержимое записи в $tableName, для которой генерируется значение полнотекстового
	     поиска
	   @return [string $url, string $ret_value] - [url, сгенерированное значение поля полнотекстового поиска]
	   
2.2) пример реализации данной технологии:

class UserFullTextSearch {
	public function getFullTextSearchStructure() {
		$this->addInfo('yz_cat3', ['yz_list4'], 'buildCat3');
		//$this->addInfo('yz_list5', ['yz_list48'], 'buildList5');
		//$this->addInfo('yz_cat8', ['yz_ord3', 'yz_list2'], 'buildCat8');
	}
	public function buildCat3(array $thisRecord):array {
	    /** пусть у yz_cat3 ключ id
		      $tableName - это yz_cat3
		      поле yz_cat3.txt_res_trans - транслит поля txt
			  также включаются в поиск поля yz_cat3.description и yz_cat3.txt
			  
			  пусть таблица yz_list4 - следующая по вложенности после yz_cat3 (вложенная в нее) и пусть нам нужны поля
			  yz_list4.item и yz_list4.name
		*/	  
		$s = $thisRecord['txt'] . ' ' . $thisRecord['description'];
		$results = DB::select("select item, name from yz_list4 where parent_id = ? order by ordr", [$thisRecord['id]]);
		foreach ($results as $result) {
			$s .= ' ' . $result->item . ' ' . $result->name;
		}
		$url = 'item/' . $thisRecord['txt_res_trans'];
		return [$url, $s];
	}
}

3) также предусмотреть artisan job для всех таблиц всей БД и с параметром --table=yz_cat4 (только для данной таблицы)
    
4) сделать возможность для ord таблиц указывать unique index

6) в следующих версиях несттаба: для индексации (полнотекстового поиска) по записям - добавить поле типа "address" : 
это 2 поля в таблице, в первом содержится адрес записи на итоговом сайте, в виде "{one2.name}/{name}" например.
 в случае, если такое поле или такая таблица в очереди родительских таблиц не найдена, при сохранении или удалении
  записи запись не сохраняется и выводится ошибка
 2-е поле: так же как и в первом, в нем могут использоваться имена полей таблиц : "catalog?id={id}&parent_id={ord4.id}"
  (путь относительно корня сайта)
 - полей такого типа (address) для каждой записи может быть несколько, например, для нескольких языковых версий сайта
 
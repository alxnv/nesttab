
папки:
 user_callbacks - для настройки коллбэков пользователя (данных)
    /user.php - содержит кб функцию
      - get_user_credentials() # return array('isadmin':boolean /*есть ли доступ у пользователя как к редактированию структуры,
          так и данных, или только данных*/,
          'alldata':boolean, /* доступ ко всем данным в таблицах в ui админ модуля */ 
          'username':string)

--------
Система позволяет редактировать вложенные данные типа:

1) one_record - таблица с одной записью
2) list - таблица с любым количеством записей, и полем 'order', начинающимся с 1 и обозначающим порядковый номер записи
3) vocabulary - как list, но поле 'order' вводится и может быть любого типа из доступных в системе
4) catalog - содержит поля 'parent_id' (указывающее номер родительской записи в той же таблице),
     'order' (начинающимся с 1 и обозначающим порядковый номер записи)

каждый из типов таблиц также содержит поле 'parent_id_tbl', содержащее номер родительской записи в родительской таблице
  и поле 'id' - уникальный идентификатор записи

Вложенность таблиц данных - 7 таблиц максимум (волюнтаристское ограничение))))

--------
данные о том, какие таблицы в какие вложены, хранятся в таблице yy_tables
 
 
--------
возможна в админке загрузка файлов перетаскиванием файла на страницу (на иконку на странице)

-----
сделать ru и en локалили (функция \core::$yy->t()), en по умолчанию в коде

-----
загрузка файлов на сервер:
 сделать таблицы yy_dirs (id int - название каталога(число) в папке upload, count_files int) и Yy_files (id, id_dir, file_name varchar)
 файлы загружать на сервер с оригинальным именем (возможно, может потребоваться перекодировка имен для русских файлов,
  но я очень в этом не уверен)
 при загрузке файлов ищем каталог с минимальным количеством файлов в нем, при этом не содержащий файл с таким же именем
   init max_files=30
   (если во всех каталогах, в которых нет файла с таким же именем, количество файлов больше или равно max_files, 
     то добавляем новый каталог, max_files++)
----	 
при редактировании структуры какой либо таблицы (для операций, на которые может повлиять одновременное редактирование
  структуры этой же таблицы другим пользователем) - выполнять блокировку на 2 мин созданием файла блокировки с датой
   изменения изменяющейся при каждой итерации изменения больших массивов данных в данной задаче  
----
при запуске массивных операций над базой данных можно использовать таблицы вида temp_XXXXXX сохраняющиеся между аякс
  запросами к серверу


---
капчи (пока не ставил их в проект) : 
 kcaptcha - deprecated expressions
 google 'am not a robot' - requires host name (localhost)


----
во второй версии системы:

1) добавить тип таблиц many_to_many (редактировать в виде таблицы с полями, в которых ссылка на записи
     из других таблиц)
2) сделать возможность удаления и других длительных операций для базы данных - в несколько запусков скрипта 
	(с бегущими процентами)

------
поля с подстрокой '_res_'  в названии - вспомогательные поля, и не могут быть определены пользователем
---
проект можно размещать на gtithub, sourceforge, либо на своем хостинге
донат можно сделать на странице в проекте nesttab